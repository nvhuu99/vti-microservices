name: vti-microservices

volumes:
  mysql_data:

networks:
  vti-microservices:
    driver: bridge

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - vti-microservices

  schema-service:
    build:
      context: ./schema-service
      dockerfile: Dockerfile
    container_name: schema-service
    depends_on:
      - mysql
    restart: "no"
    networks:
      - vti-microservices

  eureka-server:
    container_name: eureka-server
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8761:8761"
    networks:
      - vti-microservices

#  auth-service:
#    container_name: auth-service
#    build:
#      context: ./auth-service
#      dockerfile: Dockerfile
#    ports:
#      - "8080:8080"
#    depends_on:
#      - mysql
#      - eureka-server
#    networks:
#      - vti-microservices

#  account-service:
#    container_name: account-service
#    build:
#      context: ./account-service
#      dockerfile: Dockerfile
#    ports:
#      - "8081:8081"
#    depends_on:
#      - mysql
#      - eureka-server
#    networks:
#      - vti-microservices